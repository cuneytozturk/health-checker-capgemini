volumes:
  db_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonar_db:
  sonar_db_data:
services:
  database:
    image: mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
    - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
  backend:
      # build: ##uncomment this line to build the backend image from Dockerfile locally
      #   context: ./backend
      image: cuneytozturk/backend
      ports:
        - '8080:8080'
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/app_db
        SPRING_DATASOURCE_USERNAME: user
        SPRING_DATASOURCE_PASSWORD: pass
        SPRING_PROFILES_ACTIVE: docker
        SPRING_SQL_INIT_MODE: always
        SPRING_JPA_SHOW_SQL: true
        API_BOTSERVICE_URL: http://host.docker.internal:3978/api/notify
        API_FRONTEND_URL: http://localhost:4200
      depends_on:
        - database
  scheduler:
    # build:
    #   context: ./scheduler
    image: cuneytozturk/scheduler
    ports:
      - '8081:8080'
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/app_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_PROFILES_ACTIVE: docker
      API_BASE_URL: http://backend:8080
    depends_on:
      - database

  frontend:
    image: cuneytozturk/frontend
    ports:
      - "4200:4200"

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
      - "5432:5432"
    volumes:
      - sonar_db:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - postgres
