name: Dev CI/CD Pipeline

on:
  push:
    branches: [cicdbackend]
  pull_request:
    branches: [cicdbackend]

jobs:
  build-test-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Backend build and tests
      working-directory: ./backend
      run: mvn clean package

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/build-push-action@v6.16.0
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
  
  build-frontend:
    name: Angular Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      # - name: Run tests
      #   working-directory: ./frontend
      #   run: npm run test:ci

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest